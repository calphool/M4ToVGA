--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=19 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 20.1 cbx_cycloneii 2020:06:05:12:04:51:SJ cbx_lpm_add_sub 2020:06:05:12:04:51:SJ cbx_lpm_compare 2020:06:05:12:04:51:SJ cbx_lpm_decode 2020:06:05:12:04:51:SJ cbx_mgl 2020:06:05:12:11:10:SJ cbx_nadder 2020:06:05:12:04:51:SJ cbx_stratix 2020:06:05:12:04:51:SJ cbx_stratixii 2020:06:05:12:04:51:SJ  VERSION_END


-- Copyright (C) 2020  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 36 
SUBDESIGN decode_fua
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[18..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[18..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode279w[2..0]	: WIRE;
	w_anode292w[3..0]	: WIRE;
	w_anode309w[3..0]	: WIRE;
	w_anode319w[3..0]	: WIRE;
	w_anode329w[3..0]	: WIRE;
	w_anode339w[3..0]	: WIRE;
	w_anode349w[3..0]	: WIRE;
	w_anode359w[3..0]	: WIRE;
	w_anode369w[3..0]	: WIRE;
	w_anode381w[2..0]	: WIRE;
	w_anode390w[3..0]	: WIRE;
	w_anode401w[3..0]	: WIRE;
	w_anode411w[3..0]	: WIRE;
	w_anode421w[3..0]	: WIRE;
	w_anode431w[3..0]	: WIRE;
	w_anode441w[3..0]	: WIRE;
	w_anode451w[3..0]	: WIRE;
	w_anode461w[3..0]	: WIRE;
	w_anode472w[2..0]	: WIRE;
	w_anode481w[3..0]	: WIRE;
	w_anode492w[3..0]	: WIRE;
	w_anode502w[3..0]	: WIRE;
	w_anode512w[3..0]	: WIRE;
	w_anode522w[3..0]	: WIRE;
	w_anode532w[3..0]	: WIRE;
	w_anode542w[3..0]	: WIRE;
	w_anode552w[3..0]	: WIRE;
	w_anode563w[2..0]	: WIRE;
	w_anode572w[3..0]	: WIRE;
	w_anode583w[3..0]	: WIRE;
	w_anode593w[3..0]	: WIRE;
	w_anode603w[3..0]	: WIRE;
	w_anode613w[3..0]	: WIRE;
	w_anode623w[3..0]	: WIRE;
	w_anode633w[3..0]	: WIRE;
	w_anode643w[3..0]	: WIRE;
	w_data277w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[18..0] = eq_wire[18..0];
	eq_wire[] = ( ( w_anode643w[3..3], w_anode633w[3..3], w_anode623w[3..3], w_anode613w[3..3], w_anode603w[3..3], w_anode593w[3..3], w_anode583w[3..3], w_anode572w[3..3]), ( w_anode552w[3..3], w_anode542w[3..3], w_anode532w[3..3], w_anode522w[3..3], w_anode512w[3..3], w_anode502w[3..3], w_anode492w[3..3], w_anode481w[3..3]), ( w_anode461w[3..3], w_anode451w[3..3], w_anode441w[3..3], w_anode431w[3..3], w_anode421w[3..3], w_anode411w[3..3], w_anode401w[3..3], w_anode390w[3..3]), ( w_anode369w[3..3], w_anode359w[3..3], w_anode349w[3..3], w_anode339w[3..3], w_anode329w[3..3], w_anode319w[3..3], w_anode309w[3..3], w_anode292w[3..3]));
	w_anode279w[] = ( (w_anode279w[1..1] & (! data_wire[4..4])), (w_anode279w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode292w[] = ( (w_anode292w[2..2] & (! w_data277w[2..2])), (w_anode292w[1..1] & (! w_data277w[1..1])), (w_anode292w[0..0] & (! w_data277w[0..0])), w_anode279w[2..2]);
	w_anode309w[] = ( (w_anode309w[2..2] & (! w_data277w[2..2])), (w_anode309w[1..1] & (! w_data277w[1..1])), (w_anode309w[0..0] & w_data277w[0..0]), w_anode279w[2..2]);
	w_anode319w[] = ( (w_anode319w[2..2] & (! w_data277w[2..2])), (w_anode319w[1..1] & w_data277w[1..1]), (w_anode319w[0..0] & (! w_data277w[0..0])), w_anode279w[2..2]);
	w_anode329w[] = ( (w_anode329w[2..2] & (! w_data277w[2..2])), (w_anode329w[1..1] & w_data277w[1..1]), (w_anode329w[0..0] & w_data277w[0..0]), w_anode279w[2..2]);
	w_anode339w[] = ( (w_anode339w[2..2] & w_data277w[2..2]), (w_anode339w[1..1] & (! w_data277w[1..1])), (w_anode339w[0..0] & (! w_data277w[0..0])), w_anode279w[2..2]);
	w_anode349w[] = ( (w_anode349w[2..2] & w_data277w[2..2]), (w_anode349w[1..1] & (! w_data277w[1..1])), (w_anode349w[0..0] & w_data277w[0..0]), w_anode279w[2..2]);
	w_anode359w[] = ( (w_anode359w[2..2] & w_data277w[2..2]), (w_anode359w[1..1] & w_data277w[1..1]), (w_anode359w[0..0] & (! w_data277w[0..0])), w_anode279w[2..2]);
	w_anode369w[] = ( (w_anode369w[2..2] & w_data277w[2..2]), (w_anode369w[1..1] & w_data277w[1..1]), (w_anode369w[0..0] & w_data277w[0..0]), w_anode279w[2..2]);
	w_anode381w[] = ( (w_anode381w[1..1] & (! data_wire[4..4])), (w_anode381w[0..0] & data_wire[3..3]), enable_wire);
	w_anode390w[] = ( (w_anode390w[2..2] & (! w_data277w[2..2])), (w_anode390w[1..1] & (! w_data277w[1..1])), (w_anode390w[0..0] & (! w_data277w[0..0])), w_anode381w[2..2]);
	w_anode401w[] = ( (w_anode401w[2..2] & (! w_data277w[2..2])), (w_anode401w[1..1] & (! w_data277w[1..1])), (w_anode401w[0..0] & w_data277w[0..0]), w_anode381w[2..2]);
	w_anode411w[] = ( (w_anode411w[2..2] & (! w_data277w[2..2])), (w_anode411w[1..1] & w_data277w[1..1]), (w_anode411w[0..0] & (! w_data277w[0..0])), w_anode381w[2..2]);
	w_anode421w[] = ( (w_anode421w[2..2] & (! w_data277w[2..2])), (w_anode421w[1..1] & w_data277w[1..1]), (w_anode421w[0..0] & w_data277w[0..0]), w_anode381w[2..2]);
	w_anode431w[] = ( (w_anode431w[2..2] & w_data277w[2..2]), (w_anode431w[1..1] & (! w_data277w[1..1])), (w_anode431w[0..0] & (! w_data277w[0..0])), w_anode381w[2..2]);
	w_anode441w[] = ( (w_anode441w[2..2] & w_data277w[2..2]), (w_anode441w[1..1] & (! w_data277w[1..1])), (w_anode441w[0..0] & w_data277w[0..0]), w_anode381w[2..2]);
	w_anode451w[] = ( (w_anode451w[2..2] & w_data277w[2..2]), (w_anode451w[1..1] & w_data277w[1..1]), (w_anode451w[0..0] & (! w_data277w[0..0])), w_anode381w[2..2]);
	w_anode461w[] = ( (w_anode461w[2..2] & w_data277w[2..2]), (w_anode461w[1..1] & w_data277w[1..1]), (w_anode461w[0..0] & w_data277w[0..0]), w_anode381w[2..2]);
	w_anode472w[] = ( (w_anode472w[1..1] & data_wire[4..4]), (w_anode472w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode481w[] = ( (w_anode481w[2..2] & (! w_data277w[2..2])), (w_anode481w[1..1] & (! w_data277w[1..1])), (w_anode481w[0..0] & (! w_data277w[0..0])), w_anode472w[2..2]);
	w_anode492w[] = ( (w_anode492w[2..2] & (! w_data277w[2..2])), (w_anode492w[1..1] & (! w_data277w[1..1])), (w_anode492w[0..0] & w_data277w[0..0]), w_anode472w[2..2]);
	w_anode502w[] = ( (w_anode502w[2..2] & (! w_data277w[2..2])), (w_anode502w[1..1] & w_data277w[1..1]), (w_anode502w[0..0] & (! w_data277w[0..0])), w_anode472w[2..2]);
	w_anode512w[] = ( (w_anode512w[2..2] & (! w_data277w[2..2])), (w_anode512w[1..1] & w_data277w[1..1]), (w_anode512w[0..0] & w_data277w[0..0]), w_anode472w[2..2]);
	w_anode522w[] = ( (w_anode522w[2..2] & w_data277w[2..2]), (w_anode522w[1..1] & (! w_data277w[1..1])), (w_anode522w[0..0] & (! w_data277w[0..0])), w_anode472w[2..2]);
	w_anode532w[] = ( (w_anode532w[2..2] & w_data277w[2..2]), (w_anode532w[1..1] & (! w_data277w[1..1])), (w_anode532w[0..0] & w_data277w[0..0]), w_anode472w[2..2]);
	w_anode542w[] = ( (w_anode542w[2..2] & w_data277w[2..2]), (w_anode542w[1..1] & w_data277w[1..1]), (w_anode542w[0..0] & (! w_data277w[0..0])), w_anode472w[2..2]);
	w_anode552w[] = ( (w_anode552w[2..2] & w_data277w[2..2]), (w_anode552w[1..1] & w_data277w[1..1]), (w_anode552w[0..0] & w_data277w[0..0]), w_anode472w[2..2]);
	w_anode563w[] = ( (w_anode563w[1..1] & data_wire[4..4]), (w_anode563w[0..0] & data_wire[3..3]), enable_wire);
	w_anode572w[] = ( (w_anode572w[2..2] & (! w_data277w[2..2])), (w_anode572w[1..1] & (! w_data277w[1..1])), (w_anode572w[0..0] & (! w_data277w[0..0])), w_anode563w[2..2]);
	w_anode583w[] = ( (w_anode583w[2..2] & (! w_data277w[2..2])), (w_anode583w[1..1] & (! w_data277w[1..1])), (w_anode583w[0..0] & w_data277w[0..0]), w_anode563w[2..2]);
	w_anode593w[] = ( (w_anode593w[2..2] & (! w_data277w[2..2])), (w_anode593w[1..1] & w_data277w[1..1]), (w_anode593w[0..0] & (! w_data277w[0..0])), w_anode563w[2..2]);
	w_anode603w[] = ( (w_anode603w[2..2] & (! w_data277w[2..2])), (w_anode603w[1..1] & w_data277w[1..1]), (w_anode603w[0..0] & w_data277w[0..0]), w_anode563w[2..2]);
	w_anode613w[] = ( (w_anode613w[2..2] & w_data277w[2..2]), (w_anode613w[1..1] & (! w_data277w[1..1])), (w_anode613w[0..0] & (! w_data277w[0..0])), w_anode563w[2..2]);
	w_anode623w[] = ( (w_anode623w[2..2] & w_data277w[2..2]), (w_anode623w[1..1] & (! w_data277w[1..1])), (w_anode623w[0..0] & w_data277w[0..0]), w_anode563w[2..2]);
	w_anode633w[] = ( (w_anode633w[2..2] & w_data277w[2..2]), (w_anode633w[1..1] & w_data277w[1..1]), (w_anode633w[0..0] & (! w_data277w[0..0])), w_anode563w[2..2]);
	w_anode643w[] = ( (w_anode643w[2..2] & w_data277w[2..2]), (w_anode643w[1..1] & w_data277w[1..1]), (w_anode643w[0..0] & w_data277w[0..0]), w_anode563w[2..2]);
	w_data277w[2..0] = data_wire[2..0];
END;
--VALID FILE
