--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=19 LPM_WIDTH=5 data eq
--VERSION_BEGIN 20.1 cbx_cycloneii 2020:06:05:12:04:51:SJ cbx_lpm_add_sub 2020:06:05:12:04:51:SJ cbx_lpm_compare 2020:06:05:12:04:51:SJ cbx_lpm_decode 2020:06:05:12:04:51:SJ cbx_mgl 2020:06:05:12:11:10:SJ cbx_nadder 2020:06:05:12:04:51:SJ cbx_stratix 2020:06:05:12:04:51:SJ cbx_stratixii 2020:06:05:12:04:51:SJ  VERSION_END


-- Copyright (C) 2020  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 36 
SUBDESIGN decode_8aa
( 
	data[4..0]	:	input;
	eq[18..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[18..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode1005w[3..0]	: WIRE;
	w_anode1015w[3..0]	: WIRE;
	w_anode1025w[3..0]	: WIRE;
	w_anode657w[2..0]	: WIRE;
	w_anode671w[3..0]	: WIRE;
	w_anode688w[3..0]	: WIRE;
	w_anode698w[3..0]	: WIRE;
	w_anode708w[3..0]	: WIRE;
	w_anode718w[3..0]	: WIRE;
	w_anode728w[3..0]	: WIRE;
	w_anode738w[3..0]	: WIRE;
	w_anode748w[3..0]	: WIRE;
	w_anode760w[2..0]	: WIRE;
	w_anode770w[3..0]	: WIRE;
	w_anode781w[3..0]	: WIRE;
	w_anode791w[3..0]	: WIRE;
	w_anode801w[3..0]	: WIRE;
	w_anode811w[3..0]	: WIRE;
	w_anode821w[3..0]	: WIRE;
	w_anode831w[3..0]	: WIRE;
	w_anode841w[3..0]	: WIRE;
	w_anode852w[2..0]	: WIRE;
	w_anode862w[3..0]	: WIRE;
	w_anode873w[3..0]	: WIRE;
	w_anode883w[3..0]	: WIRE;
	w_anode893w[3..0]	: WIRE;
	w_anode903w[3..0]	: WIRE;
	w_anode913w[3..0]	: WIRE;
	w_anode923w[3..0]	: WIRE;
	w_anode933w[3..0]	: WIRE;
	w_anode944w[2..0]	: WIRE;
	w_anode954w[3..0]	: WIRE;
	w_anode965w[3..0]	: WIRE;
	w_anode975w[3..0]	: WIRE;
	w_anode985w[3..0]	: WIRE;
	w_anode995w[3..0]	: WIRE;
	w_data655w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[18..0] = eq_wire[18..0];
	eq_wire[] = ( ( w_anode1025w[3..3], w_anode1015w[3..3], w_anode1005w[3..3], w_anode995w[3..3], w_anode985w[3..3], w_anode975w[3..3], w_anode965w[3..3], w_anode954w[3..3]), ( w_anode933w[3..3], w_anode923w[3..3], w_anode913w[3..3], w_anode903w[3..3], w_anode893w[3..3], w_anode883w[3..3], w_anode873w[3..3], w_anode862w[3..3]), ( w_anode841w[3..3], w_anode831w[3..3], w_anode821w[3..3], w_anode811w[3..3], w_anode801w[3..3], w_anode791w[3..3], w_anode781w[3..3], w_anode770w[3..3]), ( w_anode748w[3..3], w_anode738w[3..3], w_anode728w[3..3], w_anode718w[3..3], w_anode708w[3..3], w_anode698w[3..3], w_anode688w[3..3], w_anode671w[3..3]));
	w_anode1005w[] = ( (w_anode1005w[2..2] & w_data655w[2..2]), (w_anode1005w[1..1] & (! w_data655w[1..1])), (w_anode1005w[0..0] & w_data655w[0..0]), w_anode944w[2..2]);
	w_anode1015w[] = ( (w_anode1015w[2..2] & w_data655w[2..2]), (w_anode1015w[1..1] & w_data655w[1..1]), (w_anode1015w[0..0] & (! w_data655w[0..0])), w_anode944w[2..2]);
	w_anode1025w[] = ( (w_anode1025w[2..2] & w_data655w[2..2]), (w_anode1025w[1..1] & w_data655w[1..1]), (w_anode1025w[0..0] & w_data655w[0..0]), w_anode944w[2..2]);
	w_anode657w[] = ( (w_anode657w[1..1] & (! data_wire[4..4])), (w_anode657w[0..0] & (! data_wire[3..3])), B"1");
	w_anode671w[] = ( (w_anode671w[2..2] & (! w_data655w[2..2])), (w_anode671w[1..1] & (! w_data655w[1..1])), (w_anode671w[0..0] & (! w_data655w[0..0])), w_anode657w[2..2]);
	w_anode688w[] = ( (w_anode688w[2..2] & (! w_data655w[2..2])), (w_anode688w[1..1] & (! w_data655w[1..1])), (w_anode688w[0..0] & w_data655w[0..0]), w_anode657w[2..2]);
	w_anode698w[] = ( (w_anode698w[2..2] & (! w_data655w[2..2])), (w_anode698w[1..1] & w_data655w[1..1]), (w_anode698w[0..0] & (! w_data655w[0..0])), w_anode657w[2..2]);
	w_anode708w[] = ( (w_anode708w[2..2] & (! w_data655w[2..2])), (w_anode708w[1..1] & w_data655w[1..1]), (w_anode708w[0..0] & w_data655w[0..0]), w_anode657w[2..2]);
	w_anode718w[] = ( (w_anode718w[2..2] & w_data655w[2..2]), (w_anode718w[1..1] & (! w_data655w[1..1])), (w_anode718w[0..0] & (! w_data655w[0..0])), w_anode657w[2..2]);
	w_anode728w[] = ( (w_anode728w[2..2] & w_data655w[2..2]), (w_anode728w[1..1] & (! w_data655w[1..1])), (w_anode728w[0..0] & w_data655w[0..0]), w_anode657w[2..2]);
	w_anode738w[] = ( (w_anode738w[2..2] & w_data655w[2..2]), (w_anode738w[1..1] & w_data655w[1..1]), (w_anode738w[0..0] & (! w_data655w[0..0])), w_anode657w[2..2]);
	w_anode748w[] = ( (w_anode748w[2..2] & w_data655w[2..2]), (w_anode748w[1..1] & w_data655w[1..1]), (w_anode748w[0..0] & w_data655w[0..0]), w_anode657w[2..2]);
	w_anode760w[] = ( (w_anode760w[1..1] & (! data_wire[4..4])), (w_anode760w[0..0] & data_wire[3..3]), B"1");
	w_anode770w[] = ( (w_anode770w[2..2] & (! w_data655w[2..2])), (w_anode770w[1..1] & (! w_data655w[1..1])), (w_anode770w[0..0] & (! w_data655w[0..0])), w_anode760w[2..2]);
	w_anode781w[] = ( (w_anode781w[2..2] & (! w_data655w[2..2])), (w_anode781w[1..1] & (! w_data655w[1..1])), (w_anode781w[0..0] & w_data655w[0..0]), w_anode760w[2..2]);
	w_anode791w[] = ( (w_anode791w[2..2] & (! w_data655w[2..2])), (w_anode791w[1..1] & w_data655w[1..1]), (w_anode791w[0..0] & (! w_data655w[0..0])), w_anode760w[2..2]);
	w_anode801w[] = ( (w_anode801w[2..2] & (! w_data655w[2..2])), (w_anode801w[1..1] & w_data655w[1..1]), (w_anode801w[0..0] & w_data655w[0..0]), w_anode760w[2..2]);
	w_anode811w[] = ( (w_anode811w[2..2] & w_data655w[2..2]), (w_anode811w[1..1] & (! w_data655w[1..1])), (w_anode811w[0..0] & (! w_data655w[0..0])), w_anode760w[2..2]);
	w_anode821w[] = ( (w_anode821w[2..2] & w_data655w[2..2]), (w_anode821w[1..1] & (! w_data655w[1..1])), (w_anode821w[0..0] & w_data655w[0..0]), w_anode760w[2..2]);
	w_anode831w[] = ( (w_anode831w[2..2] & w_data655w[2..2]), (w_anode831w[1..1] & w_data655w[1..1]), (w_anode831w[0..0] & (! w_data655w[0..0])), w_anode760w[2..2]);
	w_anode841w[] = ( (w_anode841w[2..2] & w_data655w[2..2]), (w_anode841w[1..1] & w_data655w[1..1]), (w_anode841w[0..0] & w_data655w[0..0]), w_anode760w[2..2]);
	w_anode852w[] = ( (w_anode852w[1..1] & data_wire[4..4]), (w_anode852w[0..0] & (! data_wire[3..3])), B"1");
	w_anode862w[] = ( (w_anode862w[2..2] & (! w_data655w[2..2])), (w_anode862w[1..1] & (! w_data655w[1..1])), (w_anode862w[0..0] & (! w_data655w[0..0])), w_anode852w[2..2]);
	w_anode873w[] = ( (w_anode873w[2..2] & (! w_data655w[2..2])), (w_anode873w[1..1] & (! w_data655w[1..1])), (w_anode873w[0..0] & w_data655w[0..0]), w_anode852w[2..2]);
	w_anode883w[] = ( (w_anode883w[2..2] & (! w_data655w[2..2])), (w_anode883w[1..1] & w_data655w[1..1]), (w_anode883w[0..0] & (! w_data655w[0..0])), w_anode852w[2..2]);
	w_anode893w[] = ( (w_anode893w[2..2] & (! w_data655w[2..2])), (w_anode893w[1..1] & w_data655w[1..1]), (w_anode893w[0..0] & w_data655w[0..0]), w_anode852w[2..2]);
	w_anode903w[] = ( (w_anode903w[2..2] & w_data655w[2..2]), (w_anode903w[1..1] & (! w_data655w[1..1])), (w_anode903w[0..0] & (! w_data655w[0..0])), w_anode852w[2..2]);
	w_anode913w[] = ( (w_anode913w[2..2] & w_data655w[2..2]), (w_anode913w[1..1] & (! w_data655w[1..1])), (w_anode913w[0..0] & w_data655w[0..0]), w_anode852w[2..2]);
	w_anode923w[] = ( (w_anode923w[2..2] & w_data655w[2..2]), (w_anode923w[1..1] & w_data655w[1..1]), (w_anode923w[0..0] & (! w_data655w[0..0])), w_anode852w[2..2]);
	w_anode933w[] = ( (w_anode933w[2..2] & w_data655w[2..2]), (w_anode933w[1..1] & w_data655w[1..1]), (w_anode933w[0..0] & w_data655w[0..0]), w_anode852w[2..2]);
	w_anode944w[] = ( (w_anode944w[1..1] & data_wire[4..4]), (w_anode944w[0..0] & data_wire[3..3]), B"1");
	w_anode954w[] = ( (w_anode954w[2..2] & (! w_data655w[2..2])), (w_anode954w[1..1] & (! w_data655w[1..1])), (w_anode954w[0..0] & (! w_data655w[0..0])), w_anode944w[2..2]);
	w_anode965w[] = ( (w_anode965w[2..2] & (! w_data655w[2..2])), (w_anode965w[1..1] & (! w_data655w[1..1])), (w_anode965w[0..0] & w_data655w[0..0]), w_anode944w[2..2]);
	w_anode975w[] = ( (w_anode975w[2..2] & (! w_data655w[2..2])), (w_anode975w[1..1] & w_data655w[1..1]), (w_anode975w[0..0] & (! w_data655w[0..0])), w_anode944w[2..2]);
	w_anode985w[] = ( (w_anode985w[2..2] & (! w_data655w[2..2])), (w_anode985w[1..1] & w_data655w[1..1]), (w_anode985w[0..0] & w_data655w[0..0]), w_anode944w[2..2]);
	w_anode995w[] = ( (w_anode995w[2..2] & w_data655w[2..2]), (w_anode995w[1..1] & (! w_data655w[1..1])), (w_anode995w[0..0] & (! w_data655w[0..0])), w_anode944w[2..2]);
	w_data655w[2..0] = data_wire[2..0];
END;
--VALID FILE
