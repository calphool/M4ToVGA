--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=32 LPM_WIDTH=5 data eq
--VERSION_BEGIN 20.1 cbx_cycloneii 2020:06:05:12:04:51:SJ cbx_lpm_add_sub 2020:06:05:12:04:51:SJ cbx_lpm_compare 2020:06:05:12:04:51:SJ cbx_lpm_decode 2020:06:05:12:04:51:SJ cbx_mgl 2020:06:05:12:11:10:SJ cbx_nadder 2020:06:05:12:04:51:SJ cbx_stratix 2020:06:05:12:04:51:SJ cbx_stratixii 2020:06:05:12:04:51:SJ  VERSION_END


-- Copyright (C) 2020  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 36 
SUBDESIGN decode_3aa
( 
	data[4..0]	:	input;
	eq[31..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[31..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode1003w[3..0]	: WIRE;
	w_anode1013w[3..0]	: WIRE;
	w_anode1023w[3..0]	: WIRE;
	w_anode1034w[2..0]	: WIRE;
	w_anode1044w[3..0]	: WIRE;
	w_anode1055w[3..0]	: WIRE;
	w_anode1065w[3..0]	: WIRE;
	w_anode1075w[3..0]	: WIRE;
	w_anode1085w[3..0]	: WIRE;
	w_anode1095w[3..0]	: WIRE;
	w_anode1105w[3..0]	: WIRE;
	w_anode1115w[3..0]	: WIRE;
	w_anode1126w[2..0]	: WIRE;
	w_anode1136w[3..0]	: WIRE;
	w_anode1147w[3..0]	: WIRE;
	w_anode1157w[3..0]	: WIRE;
	w_anode1167w[3..0]	: WIRE;
	w_anode1177w[3..0]	: WIRE;
	w_anode1187w[3..0]	: WIRE;
	w_anode1197w[3..0]	: WIRE;
	w_anode1207w[3..0]	: WIRE;
	w_anode839w[2..0]	: WIRE;
	w_anode853w[3..0]	: WIRE;
	w_anode870w[3..0]	: WIRE;
	w_anode880w[3..0]	: WIRE;
	w_anode890w[3..0]	: WIRE;
	w_anode900w[3..0]	: WIRE;
	w_anode910w[3..0]	: WIRE;
	w_anode920w[3..0]	: WIRE;
	w_anode930w[3..0]	: WIRE;
	w_anode942w[2..0]	: WIRE;
	w_anode952w[3..0]	: WIRE;
	w_anode963w[3..0]	: WIRE;
	w_anode973w[3..0]	: WIRE;
	w_anode983w[3..0]	: WIRE;
	w_anode993w[3..0]	: WIRE;
	w_data837w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[31..0] = eq_wire[31..0];
	eq_wire[] = ( ( w_anode1207w[3..3], w_anode1197w[3..3], w_anode1187w[3..3], w_anode1177w[3..3], w_anode1167w[3..3], w_anode1157w[3..3], w_anode1147w[3..3], w_anode1136w[3..3]), ( w_anode1115w[3..3], w_anode1105w[3..3], w_anode1095w[3..3], w_anode1085w[3..3], w_anode1075w[3..3], w_anode1065w[3..3], w_anode1055w[3..3], w_anode1044w[3..3]), ( w_anode1023w[3..3], w_anode1013w[3..3], w_anode1003w[3..3], w_anode993w[3..3], w_anode983w[3..3], w_anode973w[3..3], w_anode963w[3..3], w_anode952w[3..3]), ( w_anode930w[3..3], w_anode920w[3..3], w_anode910w[3..3], w_anode900w[3..3], w_anode890w[3..3], w_anode880w[3..3], w_anode870w[3..3], w_anode853w[3..3]));
	w_anode1003w[] = ( (w_anode1003w[2..2] & w_data837w[2..2]), (w_anode1003w[1..1] & (! w_data837w[1..1])), (w_anode1003w[0..0] & w_data837w[0..0]), w_anode942w[2..2]);
	w_anode1013w[] = ( (w_anode1013w[2..2] & w_data837w[2..2]), (w_anode1013w[1..1] & w_data837w[1..1]), (w_anode1013w[0..0] & (! w_data837w[0..0])), w_anode942w[2..2]);
	w_anode1023w[] = ( (w_anode1023w[2..2] & w_data837w[2..2]), (w_anode1023w[1..1] & w_data837w[1..1]), (w_anode1023w[0..0] & w_data837w[0..0]), w_anode942w[2..2]);
	w_anode1034w[] = ( (w_anode1034w[1..1] & data_wire[4..4]), (w_anode1034w[0..0] & (! data_wire[3..3])), B"1");
	w_anode1044w[] = ( (w_anode1044w[2..2] & (! w_data837w[2..2])), (w_anode1044w[1..1] & (! w_data837w[1..1])), (w_anode1044w[0..0] & (! w_data837w[0..0])), w_anode1034w[2..2]);
	w_anode1055w[] = ( (w_anode1055w[2..2] & (! w_data837w[2..2])), (w_anode1055w[1..1] & (! w_data837w[1..1])), (w_anode1055w[0..0] & w_data837w[0..0]), w_anode1034w[2..2]);
	w_anode1065w[] = ( (w_anode1065w[2..2] & (! w_data837w[2..2])), (w_anode1065w[1..1] & w_data837w[1..1]), (w_anode1065w[0..0] & (! w_data837w[0..0])), w_anode1034w[2..2]);
	w_anode1075w[] = ( (w_anode1075w[2..2] & (! w_data837w[2..2])), (w_anode1075w[1..1] & w_data837w[1..1]), (w_anode1075w[0..0] & w_data837w[0..0]), w_anode1034w[2..2]);
	w_anode1085w[] = ( (w_anode1085w[2..2] & w_data837w[2..2]), (w_anode1085w[1..1] & (! w_data837w[1..1])), (w_anode1085w[0..0] & (! w_data837w[0..0])), w_anode1034w[2..2]);
	w_anode1095w[] = ( (w_anode1095w[2..2] & w_data837w[2..2]), (w_anode1095w[1..1] & (! w_data837w[1..1])), (w_anode1095w[0..0] & w_data837w[0..0]), w_anode1034w[2..2]);
	w_anode1105w[] = ( (w_anode1105w[2..2] & w_data837w[2..2]), (w_anode1105w[1..1] & w_data837w[1..1]), (w_anode1105w[0..0] & (! w_data837w[0..0])), w_anode1034w[2..2]);
	w_anode1115w[] = ( (w_anode1115w[2..2] & w_data837w[2..2]), (w_anode1115w[1..1] & w_data837w[1..1]), (w_anode1115w[0..0] & w_data837w[0..0]), w_anode1034w[2..2]);
	w_anode1126w[] = ( (w_anode1126w[1..1] & data_wire[4..4]), (w_anode1126w[0..0] & data_wire[3..3]), B"1");
	w_anode1136w[] = ( (w_anode1136w[2..2] & (! w_data837w[2..2])), (w_anode1136w[1..1] & (! w_data837w[1..1])), (w_anode1136w[0..0] & (! w_data837w[0..0])), w_anode1126w[2..2]);
	w_anode1147w[] = ( (w_anode1147w[2..2] & (! w_data837w[2..2])), (w_anode1147w[1..1] & (! w_data837w[1..1])), (w_anode1147w[0..0] & w_data837w[0..0]), w_anode1126w[2..2]);
	w_anode1157w[] = ( (w_anode1157w[2..2] & (! w_data837w[2..2])), (w_anode1157w[1..1] & w_data837w[1..1]), (w_anode1157w[0..0] & (! w_data837w[0..0])), w_anode1126w[2..2]);
	w_anode1167w[] = ( (w_anode1167w[2..2] & (! w_data837w[2..2])), (w_anode1167w[1..1] & w_data837w[1..1]), (w_anode1167w[0..0] & w_data837w[0..0]), w_anode1126w[2..2]);
	w_anode1177w[] = ( (w_anode1177w[2..2] & w_data837w[2..2]), (w_anode1177w[1..1] & (! w_data837w[1..1])), (w_anode1177w[0..0] & (! w_data837w[0..0])), w_anode1126w[2..2]);
	w_anode1187w[] = ( (w_anode1187w[2..2] & w_data837w[2..2]), (w_anode1187w[1..1] & (! w_data837w[1..1])), (w_anode1187w[0..0] & w_data837w[0..0]), w_anode1126w[2..2]);
	w_anode1197w[] = ( (w_anode1197w[2..2] & w_data837w[2..2]), (w_anode1197w[1..1] & w_data837w[1..1]), (w_anode1197w[0..0] & (! w_data837w[0..0])), w_anode1126w[2..2]);
	w_anode1207w[] = ( (w_anode1207w[2..2] & w_data837w[2..2]), (w_anode1207w[1..1] & w_data837w[1..1]), (w_anode1207w[0..0] & w_data837w[0..0]), w_anode1126w[2..2]);
	w_anode839w[] = ( (w_anode839w[1..1] & (! data_wire[4..4])), (w_anode839w[0..0] & (! data_wire[3..3])), B"1");
	w_anode853w[] = ( (w_anode853w[2..2] & (! w_data837w[2..2])), (w_anode853w[1..1] & (! w_data837w[1..1])), (w_anode853w[0..0] & (! w_data837w[0..0])), w_anode839w[2..2]);
	w_anode870w[] = ( (w_anode870w[2..2] & (! w_data837w[2..2])), (w_anode870w[1..1] & (! w_data837w[1..1])), (w_anode870w[0..0] & w_data837w[0..0]), w_anode839w[2..2]);
	w_anode880w[] = ( (w_anode880w[2..2] & (! w_data837w[2..2])), (w_anode880w[1..1] & w_data837w[1..1]), (w_anode880w[0..0] & (! w_data837w[0..0])), w_anode839w[2..2]);
	w_anode890w[] = ( (w_anode890w[2..2] & (! w_data837w[2..2])), (w_anode890w[1..1] & w_data837w[1..1]), (w_anode890w[0..0] & w_data837w[0..0]), w_anode839w[2..2]);
	w_anode900w[] = ( (w_anode900w[2..2] & w_data837w[2..2]), (w_anode900w[1..1] & (! w_data837w[1..1])), (w_anode900w[0..0] & (! w_data837w[0..0])), w_anode839w[2..2]);
	w_anode910w[] = ( (w_anode910w[2..2] & w_data837w[2..2]), (w_anode910w[1..1] & (! w_data837w[1..1])), (w_anode910w[0..0] & w_data837w[0..0]), w_anode839w[2..2]);
	w_anode920w[] = ( (w_anode920w[2..2] & w_data837w[2..2]), (w_anode920w[1..1] & w_data837w[1..1]), (w_anode920w[0..0] & (! w_data837w[0..0])), w_anode839w[2..2]);
	w_anode930w[] = ( (w_anode930w[2..2] & w_data837w[2..2]), (w_anode930w[1..1] & w_data837w[1..1]), (w_anode930w[0..0] & w_data837w[0..0]), w_anode839w[2..2]);
	w_anode942w[] = ( (w_anode942w[1..1] & (! data_wire[4..4])), (w_anode942w[0..0] & data_wire[3..3]), B"1");
	w_anode952w[] = ( (w_anode952w[2..2] & (! w_data837w[2..2])), (w_anode952w[1..1] & (! w_data837w[1..1])), (w_anode952w[0..0] & (! w_data837w[0..0])), w_anode942w[2..2]);
	w_anode963w[] = ( (w_anode963w[2..2] & (! w_data837w[2..2])), (w_anode963w[1..1] & (! w_data837w[1..1])), (w_anode963w[0..0] & w_data837w[0..0]), w_anode942w[2..2]);
	w_anode973w[] = ( (w_anode973w[2..2] & (! w_data837w[2..2])), (w_anode973w[1..1] & w_data837w[1..1]), (w_anode973w[0..0] & (! w_data837w[0..0])), w_anode942w[2..2]);
	w_anode983w[] = ( (w_anode983w[2..2] & (! w_data837w[2..2])), (w_anode983w[1..1] & w_data837w[1..1]), (w_anode983w[0..0] & w_data837w[0..0]), w_anode942w[2..2]);
	w_anode993w[] = ( (w_anode993w[2..2] & w_data837w[2..2]), (w_anode993w[1..1] & (! w_data837w[1..1])), (w_anode993w[0..0] & (! w_data837w[0..0])), w_anode942w[2..2]);
	w_data837w[2..0] = data_wire[2..0];
END;
--VALID FILE
